{
 "Resources": {
  "MyVpcTalle1B91D185D": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "ec2-instance/MyVpcTalle1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/MyVpcTalle1/Resource"
   }
  },
  "MyVpcTalle1PublicSubnetSubnet1Subnet83C43D4B": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PublicSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcTalle1B91D185D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet1/Subnet"
   }
  },
  "MyVpcTalle1PublicSubnetSubnet1RouteTableC6438AF4": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcTalle1B91D185D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet1/RouteTable"
   }
  },
  "MyVpcTalle1PublicSubnetSubnet1RouteTableAssociation6403364E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcTalle1PublicSubnetSubnet1RouteTableC6438AF4"
    },
    "SubnetId": {
     "Ref": "MyVpcTalle1PublicSubnetSubnet1Subnet83C43D4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet1/RouteTableAssociation"
   }
  },
  "MyVpcTalle1PublicSubnetSubnet1DefaultRoute734D9020": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVpcTalle1IGWBB25BF18"
    },
    "RouteTableId": {
     "Ref": "MyVpcTalle1PublicSubnetSubnet1RouteTableC6438AF4"
    }
   },
   "DependsOn": [
    "MyVpcTalle1VPCGW5343498E"
   ],
   "Metadata": {
    "aws:cdk:path": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet1/DefaultRoute"
   }
  },
  "MyVpcTalle1PublicSubnetSubnet2SubnetFE404E83": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PublicSubnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcTalle1B91D185D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet2/Subnet"
   }
  },
  "MyVpcTalle1PublicSubnetSubnet2RouteTable3CECE1F1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcTalle1B91D185D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet2/RouteTable"
   }
  },
  "MyVpcTalle1PublicSubnetSubnet2RouteTableAssociation356C786B": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyVpcTalle1PublicSubnetSubnet2RouteTable3CECE1F1"
    },
    "SubnetId": {
     "Ref": "MyVpcTalle1PublicSubnetSubnet2SubnetFE404E83"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet2/RouteTableAssociation"
   }
  },
  "MyVpcTalle1PublicSubnetSubnet2DefaultRouteA699A846": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyVpcTalle1IGWBB25BF18"
    },
    "RouteTableId": {
     "Ref": "MyVpcTalle1PublicSubnetSubnet2RouteTable3CECE1F1"
    }
   },
   "DependsOn": [
    "MyVpcTalle1VPCGW5343498E"
   ],
   "Metadata": {
    "aws:cdk:path": "ec2-instance/MyVpcTalle1/PublicSubnetSubnet2/DefaultRoute"
   }
  },
  "MyVpcTalle1IGWBB25BF18": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "ec2-instance/MyVpcTalle1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/MyVpcTalle1/IGW"
   }
  },
  "MyVpcTalle1VPCGW5343498E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "MyVpcTalle1IGWBB25BF18"
    },
    "VpcId": {
     "Ref": "MyVpcTalle1B91D185D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/MyVpcTalle1/VPCGW"
   }
  },
  "InstanceSSMCBFA3CF0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/InstanceSSM/Resource"
   }
  },
  "InstanceInstanceSecurityGroupF0E2D5BE": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "ec2-instance/Instance/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "from 0.0.0.0/0:80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "ec2-instance/Instance"
     }
    ],
    "VpcId": {
     "Ref": "MyVpcTalle1B91D185D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/Instance/InstanceSecurityGroup/Resource"
   }
  },
  "InstanceInstanceProfileAB5AEF02": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "InstanceSSMCBFA3CF0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/Instance/InstanceProfile"
   }
  },
  "InstanceC1063A87": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "InstanceInstanceProfileAB5AEF02"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t2.micro",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "InstanceInstanceSecurityGroupF0E2D5BE",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "MyVpcTalle1PublicSubnetSubnet1Subnet83C43D4B"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "ec2-instance/Instance"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\nsudo yum update -y\nsudo yum install -y httpd\nsudo systemctl start httpd\nsudo systemctl enable httpd\nsudo echo 'Hola Mundo!' > /var/www/html/index.html"
    }
   },
   "DependsOn": [
    "InstanceSSMCBFA3CF0"
   ],
   "Metadata": {
    "aws:cdk:path": "ec2-instance/Instance/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11O0WqDQBD8lryf12qh0MfgQ8jboSWvZd1syDa6F+72EBH/vWhiLX2a2ZlZZgqbv+c230EfMzzfspYbO9YKeDPQx6+RsLDj6Y6mvMjJlcalpmWsUyOks7axyielT2ha2vRN28fokUHZy294JkdRCkJ6AKUehmfN89qrAl47EjVHiQqCZGrCFFiHQ/DpvjT9F9boZBg6O1b+sWjF1XbBX7ilaTIVRZ8CLq6DAB0pheXlj1F6OfM8fzJu0KuXlzf7YYvX3XdkzkIS5Y5s9cAfnKpFTFYBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "ec2-instance/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}